<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,height=device-height, initial-scale=1.0" />
    <title>@ViewData["Title"] - Vamos_Sergy</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Vamos_Sergy.styles.css" asp-append-version="true" />
</head>
<body>
   @*  <header>
          <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container-fluid">
        <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Vamos_Sergy</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
        aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
        </button>
        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
        <ul class="navbar-nav flex-grow-1">
        <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
        </li>
        <li class="nav-item">
        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </li>
        </ul>
        <partial name="_LoginPartial" />
        </div>
        </div>
        </nav> 
    </header> *@
    <main role="main" style="background-color:royalblue; margin-left:7rem; margin-right:7rem;">
        <div class="flex-container">
            <div style="width:17%;">
                <div class="btn-group-vertical w-100 h-100 g-1" role="group" aria-label="Vertical button group">
                    <button type="button" onclick="location.href='@Url.Action("ViewHero", "Main" )'">
                        <div class="container">
                            <div class="row">
                                <div class="col col-3 ">
                                    <img class="profilPic" src="@Url.Action("GetProfilImage", "Main")" class="card-img-top" alt="...">
                                </div>
                                <div class="col col-9">
                                    <div class="container text-center">
                                        <div class="row">
                                            <div class="col">
                                                @if (ViewData.ContainsKey("gold"))
                                                {
                                                    <small>Gold:  <output id="currentGold">@ViewData["gold"]</output></small>
                                                }
                                                else
                                                {
                                                    <small>Gold: 0</small>
                                                }
                                                @if (ViewData.ContainsKey("mushroom"))
                                                {
                                                    <small>Mushrom: <output id="currentMushroom">@ViewData["mushroom"]</output></small>
                                                }
                                                else
                                                {
                                                    <small>Mushrom: 0</small>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </button>
                    <button type="button" onclick="location.href='@Url.Action("Tavern", "Main" )'" class="btn btn-primary sideButton">Tavern</button>
                    <button type="button" onclick="location.href='@Url.Action("Arena", "Main" )'" class="btn btn-primary mt-2 sideButton">Arena</button>
                    <button type="button" onclick="location.href='@Url.Action("WeaponShop", "Main" )'" class="btn btn-primary mt-2 sideButton">Weapon Shop</button>
                    <button type="button" class="btn btn-primary mt-2 sideButton">Magic Shop</button>
                    <button type="button" onclick="location.href='@Url.Action("Stable", "Main" )'" class="btn btn-primary mt-2 sideButton">Stable</button>
                    <button type="button" class="btn btn-primary mt-2 sideButton">Dungeons</button>
                    <button type="button" class="btn btn-primary mt-2 sideButton">Guild</button>
                    <button type="button" class="btn btn-primary mt-2 sideButton">Hall of Fame</button>
                    <partial name="_LoginPartial" />
                </div>
            </div>
            <div style="width:83%; max-height:100%">
                @RenderBody()
            </div>
        </div>
    </main>
    @*     <footer class="border-top footer text-muted">
    <div class="container">
    &copy; 2024 - Vamos_Sergy - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
    </div>
    </footer> *@
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    @* <script src="~/lib/jquery-ajax-unobtrusive/jquery.unobtrusive-ajax.js"></script> *@
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://kit.fontawesome.com/a0addb9504.js" crossorigin="anonymous"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
<script type="text/javascript" src="lib.js"></script>
<script type="text/javascript">
    function updateMoney(gold, mushroom) {
        const GoldCounter = document.getElementById("currentGold");
        const MushCounter = document.getElementById("currentMushroom");
        const newGold = Number(GoldCounter.textContent) - gold;
        const newMush = Number(MushCounter.textContent) - mushroom;
        GoldCounter.textContent = newGold.toFixed(2);
        MushCounter.textContent = newMush;
    }

    function equip(id, index) {
        let invSlotId = 'invSlot' + index;
        let invId = 'inv' + index;
        let invImgId = 'invImg' + index;
        const url = "https://localhost:7284/Gama/" + id;

        const xhr = new XMLHttpRequest();
        xhr.open("GET", url);
        xhr.send();
        xhr.responseType = "json";


        xhr.onload = () => {
            if (xhr.readyState == 4 && xhr.status == 200) {
                const data = xhr.response;
                // alert(data.length);
                if (data.length > 1) {
                    let type = data[0].type;
                    var equipSlot = document.getElementById(type);
                    var invSlot = document.getElementById(invSlotId);
                    let title = data[0].name;
                    let stats = data[0].statForDisplay;
                    let url = data[0].url;
                    type += 'Link';

                    // equipSlot.replaceChild(invSlot, equipSlot.firstChild);
                    let invItem = `<a id="${type}"
                                                tabindex="0"
                                                role="button"
                                                data-bs-toggle="popover"
                                                title="${title}"
                                                data-bs-content="${stats}"
                                                href="#"><img class="InventoryImage" src="/Images/ItemImages/${url}" />
                                           </a>`;
                    title = data[1].name;
                    //popover367073
                    stats = data[1].statForDisplay;
                    url = data[1].url;
                    let eqItem = `<a id="${invId}"
                                                    tabindex="0"
                                                    role="button"
                                                    data-bs-toggle="popover"
                                                    title="${title}"
                                                    data-bs-content="${stats}"
                                                    href="#"><img id="invImg${id}" class="InventoryImage" src="/Images/ItemImages/${url}" />
                                               </a>`;
                    equipSlot.innerHTML = invItem;
                    invSlot.innerHTML = eqItem;
                    const inv = document.getElementById(type);
                    const popoverInv = new bootstrap.Popover(inv, { html: true, trigger: "hover" });
                    const eq = document.getElementById(invId);
                    const popoverEq = new bootstrap.Popover(eq, { html: true, trigger: "hover" });
                } else {
                    let type = data[0].type;
                    var equipSlot = document.getElementById(type);
                    equipSlot.innerHTML = "";
                    var invSlot = document.getElementById(invSlotId);
                    let title = data[0].name;
                    let stats = data[0].statForDisplay;
                    let url = data[0].url;
                    type += 'Link';

                    let invItem = `<a id="${type}"
                                                    tabindex="0"
                                                    role="button"
                                                    data-bs-toggle="popover"
                                                    title="${title}"
                                                    data-bs-content="${stats}"
                                                    href="#"><img class="InventoryImage" src="/Images/ItemImages/${url}" />
                                               </a>`;
                    let blank = '<img class="InventoryImg" style="visibility:hidden" src=" / Images / NullImages / blank.png" />';
                    invSlot.innerHTML = blank;
                    equipSlot.innerHTML = invItem;
                    equipSlot.className = "equpipped";
                    const inv = document.getElementById(type);
                    const popoverInv = new bootstrap.Popover(inv, { html: true, trigger: "hover" });
                }
            } else {
                console.log(`Error: ${xhr.status}`);
            }
        };
    }
</script>

